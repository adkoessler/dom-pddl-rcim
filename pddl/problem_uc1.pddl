(define (problem test_roca)
	(:domain mrod)
	(:objects
		currentCell - cell
		rob1 rob2 - actuator
		asA - actuatorSet
		rob1JntPosPer rob1JntVelPer rob1ForcePer rob2JntPosPer rob2JntVelPer rob2ForcePer cellCamera - perceptor
		psA - perceptorSet
		objA - do
		rob1MesJntPosVar rob1ContJntPosVar rob1MesJntVelVar rob1ContJntVelVar rob1MesToolPosVar rob1ContToolPosVar rob1MesToolVelVar rob1ContToolVelVar rob1MesForceVar rob1ContHybridFPVar
		rob2MesJntPosVar rob2ContJntPosVar rob2MesJntVelVar rob2ContJntVelVar rob2MesToolPosVar rob2ContToolPosVar rob2MesToolVelVar rob2ContToolVelVar rob2MesForceVar rob2ContHybridFPVar
		objAMesStressVar objAMesTensionVar objAMesShapeVar objAMesPositionVar objAMesPointCloudVar - variable
		grip1 grip2 - tool
		grasp1 grasp2 - grasp
		gsA - graspSet
		catenaryModel - mdl
	)
	(:init
		;actuation
		(hasTypeA rob1 spatialRobot)
		(hasTypeA rob2 spatialRobot)
		(hasMountedP rob1 rob1JntPosPer)
		(hasMountedP rob1 rob1JntVelPer)
		;(hasMountedP rob1 rob1ForcePer)
		(hasMountedP rob2 rob2JntPosPer)
		(hasMountedP rob2 rob2JntVelPer)
		;(hasMountedP rob2 rob2ForcePer)
		(canMountT rob1 twoFingerGripper)
		;(canMountT rob2 twoFingerGripper)
		(canMountT rob2 threeFingerGripper)
		(canControlV rob1 jointPosition)
		(canControlV rob1 jointVelocity)
		(canControlV rob1 tcpHybridFP)
		(canControlV rob2 jointPosition)
		(canControlV rob2 jointVelocity)
		(canControlV rob2 tcpHybridFP)
		;(canHandleO rob1 linear)
		;(canHandleO rob2 linear)
		(canHandleT twoFingerGripper objA)
		(canHandleT threeFingerGripper objA)
		;perception
		(hasTypeP rob1JntPosPer jointPositionSensor)
		(hasTypeP rob1JntVelPer jointVelocitySensor)
		(hasTypeP rob1ForcePer tcpForceSensor)
		(hasTypeP rob2JntPosPer jointPositionSensor)
		(hasTypeP rob2JntVelPer jointVelocitySensor)
		;(hasTypeP rob2ForcePer tcpForceSensor)
		(hasTypeP cellCamera Vision3dSensor)
		(hasMountedCP currentCell cellCamera)
		(canPerceiveO cellCamera objA)
		(canMeasureV rob1JntPosPer jointPosition)
		(canMeasureV rob1JntVelPer jointVelocity)
		(canMeasureV rob1ForcePer tcpForce)
		(canMeasureV rob2JntPosPer jointPosition)
		(canMeasureV rob2JntVelPer jointVelocity)
		;(canMeasureV rob2ForcePer tcpForce)
		(canMeasureV cellCamera objectPartialPointCloud)
		;(canMeasureV cellCamera objectPointCloud)
		;(canMeasureV cellCamera objectPosition)
		;(canMeasureV cellCamera objectShape)
		;object
		(hasTypeO objA unidim)
		(hasBehavO objA isometric)
		(hasBehavO objA noflex)
		(hasStateValue objA statePosition initialValue)
		(hasStateValue objA stateShape initialValue)
		(hasStateValue objA stateStress initialValue)
		;variables for robot 1
		(hasTypeV rob1MesJntPosVar jointPosition)
		(hasTypeV rob1MesJntVelVar jointVelocity)
		(hasTypeV rob1MesToolPosVar tcpPosition)
		(hasTypeV rob1MesToolVelVar tcpVelocity)
		(hasTypeV rob1ContJntPosVar jointPosition)
		(hasTypeV rob1ContJntVelVar jointVelocity)
		(hasTypeV rob1ContToolPosVar tcpPosition)
		(hasTypeV rob1ContToolVelVar tcpVelocity)
		(hasTypeV rob1MesForceVar tcpForce)
		(hasTypeV rob1ContHybridFPVar tcpHybridFP)
		(hasRoleV rob1MesJntPosVar measured)
		(hasRoleV rob1MesJntVelVar measured)
		(hasRoleV rob1MesToolPosVar measured)
		(hasRoleV rob1MesToolVelVar measured)
		(hasRoleV rob1ContJntPosVar control)
		(hasRoleV rob1ContJntVelVar control)
		(hasRoleV rob1ContToolPosVar control)
		(hasRoleV rob1ContToolVelVar control)
		(hasRoleV rob1MesForceVar measured)
		(hasRoleV rob1ContHybridFPVar control)
		;variables for robot 2
		(hasTypeV rob2MesJntPosVar jointPosition)
		(hasTypeV rob2MesJntVelVar jointVelocity)
		(hasTypeV rob2MesToolPosVar tcpPosition)
		(hasTypeV rob2MesToolVelVar tcpVelocity)
		(hasTypeV rob2ContJntPosVar jointPosition)
		(hasTypeV rob2ContJntVelVar jointVelocity)
		(hasTypeV rob2ContToolPosVar tcpPosition)
		(hasTypeV rob2ContToolVelVar tcpVelocity)
		;(hasTypeV rob2MesForceVar tcpForce)
		(hasTypeV rob2ContHybridFPVar tcpHybridFP)
		(hasRoleV rob2MesJntPosVar measured)
		(hasRoleV rob2MesJntVelVar measured)
		(hasRoleV rob2MesToolPosVar measured)
		(hasRoleV rob2MesToolVelVar measured)
		(hasRoleV rob2ContJntPosVar control)
		(hasRoleV rob2ContJntVelVar control)
		(hasRoleV rob2ContToolPosVar control)
		(hasRoleV rob2ContToolVelVar control)
		(hasRoleV rob2MesForceVar measured)
		(hasRoleV rob2ContHybridFPVar control)
		;variables for object
		(hasTypeV objAMesPositionVar objectPosition)
		(hasTypeV objAMesTensionVar objectTension)
		(hasTypeV objAMesShapeVar objectShape)
		(hasTypeV objAMesStressVar objectStress)
		(hasTypeV objAMesPointCloudVar objectPartialPointCloud)
		(hasRoleV objAMesPositionVar measured)
		(hasRoleV objAMesTensionVar measured)
		(hasRoleV objAMesShapeVar measured)
		(hasRoleV objAMesStressVar measured)
		(hasRoleV objAMesPointCloudVar measured)
		;tool
		(hasTypeT grip1 twoFingerGripper)
		(hasTypeT grip2 threeFingerGripper)
		(canPerformGrasp twoFingerGripper pinchGrasp)
		(canPerformGrasp threeFingerGripper pinchGrasp)
		(canPerformGrasp threeFingerGripper scissorGrasp)
		;grasping
		(canHandleG pinchGrasp objA)
		(= (graspCount objA) 0)
		;model
		(hasMethodM catenaryModel geometric)
		(hasTypeM catenaryModel unidim)
		(hasBehavM catenaryModel isometric)
		(hasBehavM catenaryModel noflex)
		;cost
		(= (total-cost) 0)
	)
	(:goal
		(and
			(hasStateValue objA statePosition targetValue)
			(hasStateValue objA stateStress targetValue)
			;(hasMeasuredOV objA objAMesTensionVar)
			;(hasMeasuredOV objA objAMesShapeVar)
			;(hasControlledV rob1 rob1ContJntPosVar)
			;(hasControlledV rob2 rob2ContHybridFPVar)
			;(hasGrasped grip1 objA rob1 grasp1)
			;(hasGrasped grip2 objA rob2 grasp2)
			;(not (= grasp1 grasp2))
			;(= (graspCount objA) 0)
		)
	)
	(:metric minimize (total-cost))
)

